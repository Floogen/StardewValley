@using Site.Themes
@inherits LayoutComponentBase
@inject NavigationManager Navigation


<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="@_pageTheme" />

<MudLayout>
    <CascadingValue Value="this">
        <MudAppBar Elevation="1" Fixed="true">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
            <MudText Typo="Typo.h5" Class="ml-3">
                <SectionOutlet SectionName="page-title" />
            </MudText>
            <MudSpacer />
            <MudIconButton Icon="@(_isDarkMode ? Icons.Material.Filled.ModeNight : Icons.Material.Filled.BrightnessHigh)" Color="Color.Default" Edge="Edge.End" OnClick="@((e) => _isDarkMode = !_isDarkMode)" />
        </MudAppBar>
        <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2" Variant="DrawerVariant.Temporary">
            <MudNavMenu Color="Color.Tertiary">
                <MudNavGroup Title="Stardew Valley" Expanded="true">
                    <MudNavLink Href="alternative-textures">Alternative Textures</MudNavLink>
                    <MudNavLink Href="fashion-sense" >Fashion Sense</MudNavLink>
                </MudNavGroup>
            </MudNavMenu>
        </MudDrawer>
        <MudMainContent>
            @Body
        </MudMainContent>
    </CascadingValue>
</MudLayout>

@code {
    private MudTheme _pageTheme { get; set; }
    private bool _drawerOpen = false;
    private bool _isDarkMode = true;

    protected override Task OnInitializedAsync()
    {
        ResetTheme();

        return base.OnInitializedAsync();
    }

    public Palette GetCurrentPalette()
    {
        return _isDarkMode ? _pageTheme.PaletteDark : _pageTheme.Palette;
    }

    public void SetTheme(MudTheme theme)
    {
        _pageTheme = theme;
        StateHasChanged();
    }

    public void ResetTheme()
    {
        _pageTheme = new BaseTheme();
        StateHasChanged();
    }

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void SetDrawer(bool isActive)
    {
        _drawerOpen = isActive;
    }
}

